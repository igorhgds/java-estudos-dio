From 7cbe60617acd45820a74d214d6c64f9b95e9ba39 Mon Sep 17 00:00:00 2001
From: igorhgds <igorhenrique.gomes@hotmail.com>
Date: Tue, 1 Apr 2025 08:28:31 -0300
Subject: [PATCH 1/6] java-stream -> desafio1

---
 README.md                              |  1 +
 java-stream/.gitignore                 | 29 ++++++++++++++++++++++++++
 java-stream/.idea/.gitignore           |  8 +++++++
 java-stream/.idea/misc.xml             |  6 ++++++
 java-stream/.idea/modules.xml          |  8 +++++++
 java-stream/.idea/vcs.xml              |  6 ++++++
 java-stream/java-stream.iml            | 11 ++++++++++
 java-stream/src/desafios/Desafio1.java | 18 ++++++++++++++++
 8 files changed, 87 insertions(+)
 create mode 100644 java-stream/.gitignore
 create mode 100644 java-stream/.idea/.gitignore
 create mode 100644 java-stream/.idea/misc.xml
 create mode 100644 java-stream/.idea/modules.xml
 create mode 100644 java-stream/.idea/vcs.xml
 create mode 100644 java-stream/java-stream.iml
 create mode 100644 java-stream/src/desafios/Desafio1.java

diff --git a/README.md b/README.md
index 80a1d54..98311c5 100644
--- a/README.md
+++ b/README.md
@@ -8,6 +8,7 @@ O repositório está organizado da seguinte forma:
 
 - **/java-basico**: Exercícios relacionados aos conceitos básicos de Java, como variáveis, estruturas de controle e tipos de dados.
 - **/java-poo**: Exercícios e desafios que envolvem os princípios da Programação Orientada a Objetos (POO), como classes, objetos, herança, polimorfismo, etc.
+- **/java-stream**: Exercícios e desafios sobre stream API em Java.
 - **/colecoes**: Exercícios e desafios sobre coleções em Java (listas, conjuntos, mapas, etc.).
 - **/spring-boot**: Projetos relacionados ao desenvolvimento de aplicações web com o framework Spring Boot.
 - **/outros**: Outros projetos e experimentos com Java que não se encaixam nas categorias anteriores.
diff --git a/java-stream/.gitignore b/java-stream/.gitignore
new file mode 100644
index 0000000..f68d109
--- /dev/null
+++ b/java-stream/.gitignore
@@ -0,0 +1,29 @@
+### IntelliJ IDEA ###
+out/
+!**/src/main/**/out/
+!**/src/test/**/out/
+
+### Eclipse ###
+.apt_generated
+.classpath
+.factorypath
+.project
+.settings
+.springBeans
+.sts4-cache
+bin/
+!**/src/main/**/bin/
+!**/src/test/**/bin/
+
+### NetBeans ###
+/nbproject/private/
+/nbbuild/
+/dist/
+/nbdist/
+/.nb-gradle/
+
+### VS Code ###
+.vscode/
+
+### Mac OS ###
+.DS_Store
\ No newline at end of file
diff --git a/java-stream/.idea/.gitignore b/java-stream/.idea/.gitignore
new file mode 100644
index 0000000..13566b8
--- /dev/null
+++ b/java-stream/.idea/.gitignore
@@ -0,0 +1,8 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Editor-based HTTP Client requests
+/httpRequests/
+# Datasource local storage ignored files
+/dataSources/
+/dataSources.local.xml
diff --git a/java-stream/.idea/misc.xml b/java-stream/.idea/misc.xml
new file mode 100644
index 0000000..f03c948
--- /dev/null
+++ b/java-stream/.idea/misc.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_23" default="true" project-jdk-name="23" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
diff --git a/java-stream/.idea/modules.xml b/java-stream/.idea/modules.xml
new file mode 100644
index 0000000..82985b7
--- /dev/null
+++ b/java-stream/.idea/modules.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/java-stream.iml" filepath="$PROJECT_DIR$/java-stream.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
diff --git a/java-stream/.idea/vcs.xml b/java-stream/.idea/vcs.xml
new file mode 100644
index 0000000..6c0b863
--- /dev/null
+++ b/java-stream/.idea/vcs.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$/.." vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
diff --git a/java-stream/java-stream.iml b/java-stream/java-stream.iml
new file mode 100644
index 0000000..c90834f
--- /dev/null
+++ b/java-stream/java-stream.iml
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
diff --git a/java-stream/src/desafios/Desafio1.java b/java-stream/src/desafios/Desafio1.java
new file mode 100644
index 0000000..749f8bd
--- /dev/null
+++ b/java-stream/src/desafios/Desafio1.java
@@ -0,0 +1,18 @@
+package desafios;
+
+import java.util.Arrays;
+import java.util.List;
+
+//Crie um programa que utilize a Stream API para ordenar a lista de números em ordem crescente e a exiba no console.
+
+public class Desafio1 {
+    public static void main(String[] args) {
+
+        List<Integer> numeros = Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 5, 4, 3);
+
+        numeros.stream()
+                .sorted()
+                .forEach(System.out::println);
+
+    }
+}
-- 
2.46.0.windows.1

